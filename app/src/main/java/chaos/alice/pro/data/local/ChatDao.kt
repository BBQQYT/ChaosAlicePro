package chaos.alice.pro.data.local

import androidx.room.Dao
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import kotlinx.coroutines.flow.Flow
import androidx.room.Transaction

@Dao
interface ChatDao {
    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
    @Query("SELECT * FROM messages WHERE chatId = :chatId ORDER BY timestamp ASC")
    fun getMessagesForChat(chatId: Long): Flow<List<MessageEntity>>

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insertMessage(message: MessageEntity)

    // –ù–û–í–´–ï –º–µ—Ç–æ–¥—ã –¥–ª—è —á–∞—Ç–æ–≤
    @Insert(onConflict = OnConflictStrategy.REPLACE)
    suspend fun insertChat(chat: ChatEntity): Long // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞

    @Query("SELECT * FROM chats ORDER BY createdAt DESC")
    fun getAllChats(): Flow<List<ChatEntity>>

    @Query("SELECT * FROM chats WHERE id = :chatId")
    suspend fun getChatById(chatId: Long): ChatEntity? // –≠—Ç–æ—Ç —É–∂–µ –µ—Å—Ç—å, –æ–Ω suspend

    @Query("SELECT * FROM chats WHERE id = :chatId")
    fun getChatFlow(chatId: Long): Flow<ChatEntity?> // –ê —ç—Ç–æ—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Flow

    @Query("UPDATE chats SET title = :newTitle WHERE id = :chatId")
    suspend fun updateChatTitle(chatId: Long, newTitle: String)
    @Query("DELETE FROM chats WHERE id = :chatId")
    suspend fun deleteChatById(chatId: Long)

    @Query("DELETE FROM messages WHERE chatId = :chatId")
    suspend fun deleteMessagesByChatId(chatId: Long)

    // üëá –î–û–ë–ê–í–¨–¢–ï –≠–¢–û–¢ –ù–û–í–´–ô –ú–ï–¢–û–î
    @Transaction
    suspend fun deleteChatAndMessages(chatId: Long) {
        deleteChatById(chatId)
        deleteMessagesByChatId(chatId)
    }
}